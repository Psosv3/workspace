version: "3.6"
services:
  reverse-proxy:
    image: traefik:v2.11
    ports:
      - "80:80"        # Expose HTTP
      - "8080:8080"    # Expose Traefik dashboard (secure this in production)
    command:
      - --api.dashboard=true
      - --providers.docker
      - --entryPoints.web.address=:80
      - --providers.docker.exposedbydefault=false
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST}`)"
      - "traefik.http.routers.traefik.service=api@internal"
    depends_on:
      - back
      - play
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
        aliases:
          - "${FRONT_HOST}"
          - "${PLAY_HOST}"
          - "${ROOM_API_HOST}"
          - "${MAPS_HOST}"
          - "${OIDC_HOST}"
          - "${MAP_STORAGE_HOST}"
          - "xmpp.workadventure.com"
          - "${MATRIX_HOST}"
          - "pusher.workadventure.com"

  play:
    image: thecodingmachine/nodejs:v2-20-bullseye
    command: npm run dev
    working_dir: /usr/src/app/play
    volumes:
      - .:/usr/src/app
    tmpfs: /tmp
    # In production, internal service ports are typically not exposed directly
    environment:
      STARTUP_COMMAND_1: ../wait-proto.sh
      STARTUP_COMMAND_2: ../npm-install.sh
      STARTUP_COMMAND_3: npm run typesafe-i18n
      DEBUG: "socket,space"
      DEBUG_COLORS: "true"
      DEBUG_ERROR_MESSAGES: "true"
      DEBUG_MODE: "false"
      JITSI_URL: ${JITSI_URL}
      JITSI_PRIVATE_MODE: "false"
      ENABLE_MAP_EDITOR: "true"
      HOST: "0.0.0.0"
      NODE_ENV: production
      ALLOWED_CORS_ORIGIN: "https://${PLAY_HOST}"
      VITE_URL: ${VITE_URL}
      PUSHER_URL: "https://${PLAY_HOST}"
      FRONT_URL: "https://${PLAY_HOST}"
      UPLOADER_URL: "https://${UPLOADER_HOST}"
      ICON_URL: "https://${ICON_HOST}"
      STUN_SERVER: ${STUN_SERVER}
      TURN_SERVER: ${TURN_SERVER}
      DISABLE_NOTIFICATIONS: ${DISABLE_NOTIFICATIONS}
      SKIP_RENDER_OPTIMIZATIONS: ${SKIP_RENDER_OPTIMIZATIONS}
      TURN_USER: ""
      TURN_PASSWORD: ""
      MAX_PER_GROUP: ${MAX_PER_GROUP}
      MAX_USERNAME_LENGTH: ${MAX_USERNAME_LENGTH}
      OPID_CLIENT_ID: ${OPID_CLIENT_ID}
      OPID_CLIENT_SECRET: ${OPID_CLIENT_SECRET}
      OPID_CLIENT_ISSUER: ${OPID_CLIENT_ISSUER}
      OPID_PROFILE_SCREEN_PROVIDER: ${OPID_PROFILE_SCREEN_PROVIDER}
      OPID_SCOPE: ${OPID_SCOPE}
      OPID_PROMPT: ${OPID_PROMPT}
      OPID_USERNAME_CLAIM: ${OPID_USERNAME_CLAIM}
      OPID_LOCALE_CLAIM: ${OPID_LOCALE_CLAIM}
      OPID_LOGOUT_REDIRECT_URL: ${OPID_LOGOUT_REDIRECT_URL}
      SECRET_KEY: ${SECRET_KEY}
      ADMIN_API_URL: ${ADMIN_API_URL}
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN}
      MAP_STORAGE_API_TOKEN: "FFVSGBSGBSGFB23SFGBSFG4BS"
      API_URL: "back:50051"
      DISABLE_ANONYMOUS: "false"
      PUBLIC_MAP_STORAGE_URL: ${PUBLIC_MAP_STORAGE_URL}
      INTERNAL_MAP_STORAGE_URL: ${INTERNAL_MAP_STORAGE_URL}
      ENABLE_OPENAPI_ENDPOINT: "true"
      START_ROOM_URL: ""
      ENABLE_CHAT: "true"
      ENABLE_CHAT_UPLOAD: "true"
      ENABLE_CHAT_ONLINE_LIST: "true"
      ENABLE_CHAT_DISCONNECTED_LIST: "false"
      SERVER_NAME: "WorkAdventure"
      SERVER_MOTD: "Welcome to WorkAdventure!"
      SERVER_ICON: "https://${ICON_HOST}/logo.png"
      ENABLE_REPORT_ISSUES_MENU: "true"
      REPORT_ISSUES_URL: ${REPORT_ISSUES_URL}
      LOGROCKET_ID: ${LOGROCKET_ID}
      SENTRY_DSN_FRONT: ${SENTRY_DSN_FRONT}
      SENTRY_DSN_PUSHER: ${SENTRY_DSN_PUSHER}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_RELEASE: ${SENTRY_RELEASE}
      SENTRY_ORG: "workadventure"
      SENTRY_PROJECT: "frontend"
      ROOM_API_PORT: "50051"
      ROOM_API_SECRET_KEY: ${ROOM_API_SECRET_KEY}
      JITSI_DOMAIN: "jitsi.workadventure.com"
      JITSI_MUC_DOMAIN: "muc.jitsi.workadventure.com"
      JITSI_XMPP_DOMAIN: "xmpp.jitsi.workadventure.com"
      FEATURE_FLAG_BROADCAST_AREAS: "true"
      KLAXOON_ENABLED: "false"
      KLAXOON_CLIENT_ID: ""
      YOUTUBE_ENABLED: "true"
      GOOGLE_DRIVE_ENABLED: "true"
      GOOGLE_DOCS_ENABLED: "true"
      GOOGLE_SHEETS_ENABLED: "true"
      GOOGLE_SLIDES_ENABLED: "true"
      ERASER_ENABLED: "true"
      EXCALIDRAW_ENABLED: "true"
      EXCALIDRAW_DOMAINS: "excalidraw.com"
      EMBEDDED_DOMAINS_WHITELIST: "workadventure.com"
      CARDS_ENABLED: "true"
      ACTIVE_REPORT_ISSUES_MENU: "true"
      URL_REPORT_ISSUES: ${REPORT_ISSUES_URL}
      PEER_VIDEO_LOW_BANDWIDTH: "200kbps"
      PEER_VIDEO_RECOMMENDED_BANDWIDTH: "500kbps"
      PEER_SCREEN_SHARE_LOW_BANDWIDTH: "500kbps"
      PEER_SCREEN_SHARE_RECOMMENDED_BANDWIDTH: "1000kbps"
      GOOGLE_DRIVE_PICKER_CLIENT_ID: ${GOOGLE_DRIVE_PICKER_CLIENT_ID}
      GOOGLE_DRIVE_PICKER_APP_ID: ${GOOGLE_DRIVE_PICKER_APP_ID}
      MATRIX_API_URI: "http://synapse:8008/"
      MATRIX_PUBLIC_URI: "https://${MATRIX_HOST}"
      MATRIX_ADMIN_USER: "admin"
      MATRIX_ADMIN_PASSWORD: "MySecretPassword"
      MATRIX_DOMAIN: ${MATRIX_HOST}
      EMBEDLY_KEY: ""
      IFRAMELY_KEY: ""
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`${FRONT_HOST}`)"
      - "traefik.http.routers.front.service=front"
      - "traefik.http.services.front.loadbalancer.server.port=8080"
      - "traefik.http.routers.room-api.rule=Host(`${ROOM_API_HOST}`)"
      - "traefik.http.routers.room-api.service=room-api"
      - "traefik.http.services.room-api.loadbalancer.server.port=50051"
      - "traefik.http.services.room-api.loadbalancer.server.scheme=h2c"
      - "traefik.http.routers.play.rule=HostRegexp(`{domain:.*}`)"
      - "traefik.http.routers.play.priority=1"
      - "traefik.http.routers.play.service=play"
      - "traefik.http.services.play.loadbalancer.server.port=3000"
      - "traefik.http.routers.play-ws.rule=HostRegexp(`{domain:.*}`) && ( Path(`/admin/rooms`) || Path(`/room`) )"
      - "traefik.http.routers.play-ws.priority=2"
      - "traefik.http.routers.play-ws.service=play-ws"
      - "traefik.http.services.play-ws.loadbalancer.server.port=3001"

  maps:
    image: thecodingmachine/php:8.1-v4-apache-node12
    environment:
      DEBUG_MODE: "false"
      HOST: "0.0.0.0"
      NODE_ENV: production
      FRONT_URL: "https://${PLAY_HOST}"
      STARTUP_COMMAND_0: "sudo a2enmod headers"
      STARTUP_COMMAND_1: "yarn install"
    volumes:
      - ./maps:/var/www/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maps.rule=Host(`${MAPS_HOST}`)"
      - "traefik.http.routers.maps.entryPoints=web,traefik"
      - "traefik.http.services.maps.loadbalancer.server.port=80"

  back:
    image: thecodingmachine/nodejs:v2-20-bullseye
    command: npm run dev
    working_dir: /usr/src/app/back
    environment:
      DEBUG: ""
      PLAY_URL: "https://${PLAY_HOST}"
      STARTUP_COMMAND_1: "../wait-proto.sh"
      STARTUP_COMMAND_2: "../npm-install.sh"
      SECRET_KEY: ${SECRET_KEY}
      SECRET_JITSI_KEY: ${SECRET_JITSI_KEY}
      ENABLE_MAP_EDITOR: "true"
      ALLOW_ARTILLERY: "true"
      ADMIN_API_URL: ${ADMIN_API_URL}
      ADMIN_API_TOKEN: ${ADMIN_API_TOKEN}
      JITSI_URL: ${JITSI_URL}
      JITSI_ISS: ""
      BBB_URL: ""
      BBB_SECRET: ""
      TURN_STATIC_AUTH_SECRET: ${TURN_STATIC_AUTH_SECRET}
      MAX_PER_GROUP: ${MAX_PER_GROUP}
      REDIS_HOST: "redis"
      NODE_ENV: production
      STORE_VARIABLES_FOR_LOCAL_MAPS: "true"
      PROMETHEUS_AUTHORIZATION_TOKEN: ${PROMETHEUS_AUTHORIZATION_TOKEN}
      MAP_STORAGE_URL: "map-storage:50053"
      PUBLIC_MAP_STORAGE_URL: ${PUBLIC_MAP_STORAGE_URL}
      INTERNAL_MAP_STORAGE_URL: ${INTERNAL_MAP_STORAGE_URL}
      PLAYER_VARIABLES_MAX_TTL: "3600"
      ENABLE_CHAT: "true"
      ENABLE_CHAT_UPLOAD: "true"
      SENTRY_DSN: ${SENTRY_DSN_BACK}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_RELEASE: ${SENTRY_RELEASE}
    volumes:
      - .:/usr/src/app
    tmpfs: /tmp
    # Do not expose back ports externally in production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back.rule=Host(`${ROOM_API_HOST}`)"
      - "traefik.http.routers.back.entryPoints=web"
      - "traefik.http.services.back.loadbalancer.server.port=8080"

  map-storage:
    image: thecodingmachine/nodejs:v2-20-bullseye
    command: npm run start:dev
    working_dir: /usr/src/app/map-storage
    environment:
      STARTUP_COMMAND_1: "../wait-proto.sh"
      STARTUP_COMMAND_2: "../npm-install.sh"
      NODE_ENV: production
      PROMETHEUS_AUTHORIZATION_TOKEN: ${PROMETHEUS_AUTHORIZATION_TOKEN}
      ENABLE_BASIC_AUTHENTICATION: "true"
      AUTHENTICATION_USER: "john.doe"
      AUTHENTICATION_PASSWORD: "password"
      API_URL: "back:50051"
      SENTRY_DSN: ${SENTRY_DSN_MAPSTORAGE}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
      SENTRY_RELEASE: ${SENTRY_RELEASE}
      PATH_PREFIX: ""
      MAP_STORAGE_API_TOKEN: "FFVSGBSGBSGFB23SFGBSFG4BS"
      PUSHER_URL: "https://${PLAY_HOST}"
      WHITELISTED_RESOURCE_URLS: ""
    volumes:
      - .:/usr/src/app
    tmpfs: /tmp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.map-storage.rule=Host(`${MAP_STORAGE_HOST}`)"
      - "traefik.http.routers.map-storage.entryPoints=web"
      - "traefik.http.routers.map-storage.service=map-storage"
      - "traefik.http.services.map-storage.loadbalancer.server.port=3000"
      - "traefik.http.routers.map-storage-ui.rule=Host(`${MAP_STORAGE_HOST}`) && PathPrefix(`/ui/`)"
      - "traefik.http.routers.map-storage-ui.entryPoints=web"
      - "traefik.http.routers.map-storage-ui.service=map-storage-ui"
      - "traefik.http.services.map-storage-ui.loadbalancer.server.port=8080"

  uploader:
    image: thecodingmachine/nodejs:v2-20-bullseye
    command: npm run dev
    working_dir: /usr/src/app/uploader
    environment:
      DEBUG: ""
      STARTUP_COMMAND_1: "../npm-install.sh"
      UPLOADER_URL: "https://${UPLOADER_HOST}"
      AWS_ACCESS_KEY_ID: ""
      AWS_SECRET_ACCESS_KEY: ""
      AWS_DEFAULT_REGION: ""
      AWS_BUCKET: ""
      AWS_ENDPOINT: ""
      UPLOADER_AWS_SIGNED_URL_EXPIRATION: ""
      REDIS_HOST: ""
      REDIS_PORT: ""
      REDIS_DB_NUMBER: ""
      ENABLE_CHAT_UPLOAD: "true"
      UPLOAD_MAX_FILESIZE: ""
    volumes:
      - .:/usr/src/app
    tmpfs: /tmp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.uploader.rule=Host(`${UPLOADER_HOST}`)"
      - "traefik.http.routers.uploader.entryPoints=web"
      - "traefik.http.services.uploader.loadbalancer.server.port=8080"

  messages:
    image: thecodingmachine/nodejs:v2-20-bullseye-build
    environment:
      STARTUP_COMMAND_1: "npm install"
      STARTUP_COMMAND_2: "npm run proto:watch"
    volumes:
      - ./messages:/usr/src/app
      - ./back:/usr/src/back
      - ./play:/usr/src/play
      - ./map-storage:/usr/src/map-storage
      - ./libs:/usr/src/libs

  redis:
    image: redis:6

  redisinsight:
    image: redislabs/redisinsight:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redisinsight.rule=Host(`${REDISINSIGHT_HOST}`)"
      - "traefik.http.routers.redisinsight.entryPoints=web"
      - "traefik.http.services.redisinsight.loadbalancer.server.port=8001"

  icon:
    image: matthiasluedtke/iconserver:v3.15.0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.icon.rule=Host(`${ICON_HOST}`)"
      - "traefik.http.routers.icon.entryPoints=web"
      - "traefik.http.services.icon.loadbalancer.server.port=8080"

  oidc-server-mock:
    image: ghcr.io/soluto/oidc-server-mock:0.7.0
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      SERVER_OPTIONS_INLINE: |
        {
          "AccessTokenJwtType": "JWT",
          "Discovery": {
            "ShowKeySet": true
          },
          "Authentication": {
            "CookieSameSiteMode": "Lax",
            "CheckSessionCookieSameSiteMode": "Lax"
          }
        }
      LOGIN_OPTIONS_INLINE: |
        {
          "AllowRememberLogin": false
        }
      LOGOUT_OPTIONS_INLINE: |
        {
          "AutomaticRedirectAfterSignOut": true
        }
      API_SCOPES_INLINE: |
        - Name: tags
          UserClaims:
            - tags-scope
      API_RESOURCES_INLINE: |
        - Name: some-app
          Scopes:
            - some-app-scope-1
            - tags-scope
          UserClaims:
            - tags
      USERS_CONFIGURATION_INLINE: |
        [
          {
            "SubjectId":"1",
            "Username":"User1",
            "Password":"pwd",
            "Claims": [
              {
                "Type": "name",
                "Value": "John Doe",
                "ValueType": "string"
              },
              {
                "Type": "email",
                "Value": "john.doe@example.com",
                "ValueType": "string"
              },
              {
                "Type": "tags",
                "Value": "[\"admin\"]",
                "ValueType": "json"
              }
            ]
          },
          {
            "SubjectId":"2",
            "Username":"User2",
            "Password":"pwd",
            "Claims": [
              {
                "Type": "name",
                "Value": "Alice Doe",
                "ValueType": "string"
              },
              {
                "Type": "email",
                "Value": "alice.doe@example.com",
                "ValueType": "string"
              },
              {
                "Type": "tags",
                "Value": "[\"member\"]",
                "ValueType": "json"
              }
            ]
          }
        ]
      IDENTITY_RESOURCES_INLINE: |
        [
          {
            "Name": "tags-scope",
            "ClaimTypes": ["tags"]
          }
        ]
      CLIENTS_CONFIGURATION_PATH: /tmp/config/clients-config.json
    volumes:
      - ./contrib/oidc-server-mock:/tmp/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oidc.rule=Host(`${OIDC_HOST}`)"
      - "traefik.http.routers.oidc.entryPoints=web"
    healthcheck:
      timeout: 5s

  synapse:
    image: matrixdotorg/synapse:v1.115.0
    entrypoint: /data/start.sh
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.matrix.rule=Host(`${MATRIX_HOST}`)"
      - "traefik.http.routers.matrix.entryPoints=web"
      - "traefik.http.services.matrix.loadbalancer.server.port=8008"
      - "traefik.http.routers.matrix.service=matrix"
    volumes:
      - ./synapse:/data/
      - ./synapse/federation:/etc/nginx/vhost.d/${MATRIX_HOST}
    environment:
      VIRTUAL_HOST: "${MATRIX_HOST}"
      VIRTUAL_PORT: 8008
      LETSENCRYPT_HOST: "${MATRIX_HOST}"
      SYNAPSE_SERVER_NAME: "${MATRIX_HOST}"
      SYNAPSE_REPORT_STATS: "yes"
      MATRIX_ADMIN_USER: "admin"
      MATRIX_ADMIN_PASSWORD: "MySecretPassword"
      JWT_SECRET: ${SECRET_KEY}

networks:
  default:
    driver: bridge
